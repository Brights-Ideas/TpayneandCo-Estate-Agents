@using reCAPTCHA.MVC
@model TpayneandCo.Models.ContactModel
@{
    Layout = null;
}

@using (Html.BeginUmbracoForm("Submit", "ContactForm", null, new { id = "formContact" }))
{
	<div>
		<div class="row">
			<div class="6u 12u(mobile)">
				 @Html.TextBoxFor(m => m.Name, new { placeholder = Html.DisplayNameFor(n => n.Name) })
				@*<input type="text" name="name" placeholder="Name">*@
			</div>
			<div class="6u 12u(mobile)">
				<input type="text" name="email" placeholder="Email">
			</div>
			<div class="12u">
				<input type="text" name="subject" placeholder="Subject">
			</div>
			<div class="12u">
				<textarea name="message" placeholder="Message" rows="8"></textarea>
			</div>
			<div>
                @Html.Recaptcha()
                @Html.ValidationMessage("ReCaptcha")
            </div>
			<div class="12u">
				<input type="submit" value="Send Message">
			</div>
		</div>
	</div>
}
<script src="/scripts/jquery.validate.min.js"></script>
 <script>
	$(function () {
		$('form#formContact').validate({
			submitHandler: function (form) {
				form.submit();
			},
			errorClass: 'error-msg',
			errorPlacement: function (error, element) {
				error.insertAfter(element);
			},
			highlight: function (element, errorClass) {
				$(element).parent('.inp-wrap').addClass("error");
			},
			unhighlight: function (element, errorClass, validClass) {
				$(element).parent('.inp-wrap').removeClass("error");
			},
			rules: {
				Name: { required: true },
				email: { required: true, email: true },
				//Phone: { required: true, PhoneNumber: true },
				message: { required: true, maxlength: 500 }
			},
			messages: {
					Name: { required: 'Please enter your name' },
					email: { required: 'Please enter an email address', email: 'Please enter a valid email address' },
					//Phone: { required: 'Please enter a phone number' },
					message: { required: 'Please enter a message', maxlength: 'The message you have entered is too long.' }
				}
			});
	});
</script>